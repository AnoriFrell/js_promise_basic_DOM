{"mappings":"ACEA,SAAS,EAAW,CAAI,EACtB,IAAM,EAAQ,SAAS,aAAa,CAAC,OAErC,EAAM,SAAS,CAAC,GAAG,CAAC,WAGb,UADC,GAEJ,EAAM,SAAS,CAAC,GAAG,CAAC,iBAMxB,EAAM,WAAW,CACf,SAAS,cAAc,CACpB,eAA2D,MAAA,CAA7C,AAAS,YAAT,EAAqB,WAAa,WAAW,OAGhE,SAAS,aAAa,CAAC,QAAQ,WAAW,CAAC,EAC7C,CAEA,IAAM,EAAS,SAAS,aAAa,CAAC,SAsBtC,AAnBS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,OAAO,EAAO,gBAAgB,CAC5B,QACA,WACE,GACF,EACA,CAAE,KAAM,CAAA,CAAK,EAEjB,GAWS,IAAI,CACb,WACE,EAAW,UACb,EACA,WACE,EAAW,QACb,GAGF,AAhBS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,OAAO,WAAW,WAChB,EAAO,AAAI,MAAM,eACnB,EAAG,IACL,GAYS,IAAI,CACb,WACE,EAAW,UACb,EACA,WACE,EAAW,QACb","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction addMessage(type) {\n    var newEl = document.createElement(\"div\");\n    newEl.classList.add(\"message\");\n    switch(type){\n        case \"error\":\n            newEl.classList.add(\"error-message\");\n            break;\n        default:\n            break;\n    }\n    newEl.appendChild(document.createTextNode(\"Promise was \".concat(type === \"success\" ? \"resolved\" : \"rejected\", \"!\")));\n    document.querySelector(\"body\").appendChild(newEl);\n}\nvar logoEl = document.querySelector(\".logo\");\nvar promise1 = function() {\n    return new Promise(function(resolve, reject) {\n        return logoEl.addEventListener(\"click\", function() {\n            resolve();\n        }, {\n            once: true\n        });\n    });\n};\nvar promise2 = function() {\n    return new Promise(function(resolve, reject) {\n        return setTimeout(function() {\n            reject(new Error(\"Time is up!\"));\n        }, 3000);\n    });\n};\npromise1().then(function() {\n    addMessage(\"success\");\n}, function() {\n    addMessage(\"error\");\n});\npromise2().then(function() {\n    addMessage(\"success\");\n}, function() {\n    addMessage(\"error\");\n});\n\n//# sourceMappingURL=index.dda9f1ec.js.map\n","'use strict';\n\nfunction addMessage(type) {\n  const newEl = document.createElement('div');\n\n  newEl.classList.add('message');\n\n  switch (type) {\n    case 'error':\n      newEl.classList.add('error-message');\n      break;\n    default:\n      break;\n  }\n\n  newEl.appendChild(\n    document.createTextNode(\n      `Promise was ${type === 'success' ? 'resolved' : 'rejected'}!`,\n    ),\n  );\n  document.querySelector('body').appendChild(newEl);\n}\n\nconst logoEl = document.querySelector('.logo');\n\nconst promise1 = () => {\n  return new Promise((resolve, reject) => {\n    return logoEl.addEventListener(\n      'click',\n      () => {\n        resolve();\n      },\n      { once: true },\n    );\n  });\n};\n\nconst promise2 = () => {\n  return new Promise((resolve, reject) => {\n    return setTimeout(() => {\n      reject(new Error('Time is up!'));\n    }, 3000);\n  });\n};\n\npromise1().then(\n  () => {\n    addMessage('success');\n  },\n  () => {\n    addMessage('error');\n  },\n);\n\npromise2().then(\n  () => {\n    addMessage('success');\n  },\n  () => {\n    addMessage('error');\n  },\n);\n"],"names":["addMessage","type","newEl","document","createElement","classList","add","appendChild","createTextNode","concat","querySelector","logoEl","promise1","Promise","resolve","reject","addEventListener","once","then","promise2","setTimeout","Error"],"version":3,"file":"index.dda9f1ec.js.map"}